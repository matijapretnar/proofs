Specification "mon".

Theorem pluggable : forall E, {hoisting E} -> exists ER, {pi x\ plug E (ret x) (ER x)}.
induction on 1. intros. case H1.
    exists x\ ret x. search.
    apply IH to H2. exists x\ (bind (ER x x) X). search.
    apply IH to H2. exists x\ (app (ER x x) X). search.
    apply IH to H2. exists x\ (prj1 (ER x x)). search.
    apply IH to H2. exists x\ (prj2 (ER x x)). search.

Theorem can-get-case : forall Ms As C L A,
    {of/cases Ms As C} -> {valtys/get As L A} ->
    exists M, {get-case Ms L M}.
induction on 1. intros. case H1.
    case H2.
    case H2.
        search.
        apply IH to H3 H6. search.

Theorem progress : forall M C, {of/comp M C} -> {progresses M C}.
induction on 1. intros. case H1.
    search.
    search.
    case H2.
        search.
    case H2.
        apply can-get-case to H3 H5.
        search.
    case H2.
        search.
    apply IH to H3. case H5.
        search.
        case H3.
        case H3.
        case H6. search.
        case H6. search.
    apply IH to H2. case H4.
        case H2.
        search.
        case H2.
        case H5. search.
        case H5. search.
    apply IH to H2. apply IH to H3. search.
    apply IH to H4. case H5.
        case H4.
        case H4.
        search.
        case H6. search.
        case H6. search.
    apply IH to H4. case H5.
        case H4.
        case H4.
        search.
        case H6. search.
        case H6. search.
    case H2. apply IH to H3. case H6.
        search.
        case H3.
        case H3.
        case H7. search.
        apply pluggable to H8. search.
    search.

%%%%% Representation of operations %%%%%
 
%%% Operations %%%

% We need a way of representing operations.
% Furthermore, these operations need to be comparable.
% Ideally, we would prefer to *hypothesize* about this fact,
% but there is no legal way of doing this in Twelf.
%
% Instead, we represent operations with natural numbers
% and implement the relevant decision procedures.
% We consider this to be a very clumsy solution,
% mainly because it exposes implementation details.

operation : type.
%name operation O.

operation/z : operation.
operation/s : operation -> operation.


% We only have to define the apartness relation,
% because two operations are equal only if they are identical.

apart : operation -> operation -> type.
%mode apart +O1 +O2.

apart/sz : apart (operation/s _) operation/z.
apart/zs : apart operation/z (operation/s _).
apart/ss : apart (operation/s O1) (operation/s O2)
                 <- apart O1 O2.

% Two operations are comparable if they are either equal or apart.

comparable : operation -> operation -> type.

comparable/equal : comparable O O.
comparable/apart : comparable O1 O2
                         <- apart O1 O2.

Specification "ml".
Import "common".

Close ml/ty, ml/coer_ty.

Set subgoals off.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Theorem ml/of_op_unique : forall Sig O A A' B B',
  {ml/of_op Sig O A B} -> {ml/of_op Sig O A' B'} -> A = A' /\ B = B'.
induction on 1. intros. case H1.
  case H2. search. apply apart_not_reflexive to H6.
  case H2.
    apply apart_not_reflexive to H4.
    apply IH to H3 H5. search.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Theorem of/val_case : forall Sig H A C M,
    {ml/of_hand Sig H A C} -> {ml/get_ret_case H M} -> nabla x, {ml/of_term Sig x A |- ml/of_term Sig (M x) (ml/comp_ty C)}.
induction on 2. intros. case H2 (keep).
  case H1. case H5. search. 
  case H1. case H6. apply IH to H7 H3. search.

Theorem of/ml/op_case : forall Sig O A1 A2 H A B M,
     {ml/of_hand Sig H A B} ->
     {ml/get_op_case H O A2 M} ->
     {ml/of_op Sig O A1 A2} ->
     {is_op O} ->
     nabla x, nabla k, {ml/of_term Sig x A1, ml/of_term Sig k (ml/fun_ty A2 (ml/comp_ty B)) |- ml/of_term Sig (M x k) (ml/comp_ty B)}.
induction on 2. intros. case H2 (keep).
  case H1. case H8. apply ml/of_op_unique to H3 H10. search.
  case H1. case H9. apply IH to H10 H6 H3 H4.search.
  case H1 (keep). search.

Theorem ml/preservation : forall Sig V V' A, {ml/step V V'} -> {ml/of_term Sig V A} -> {ml/of_term Sig V' A}.
induction on 1. intros. case H1 (keep).
% APP 1
case H2. case H5. apply IH to H3 H6. search.
% APP 2
case H2. case H6. apply IH to H4 H8. search.
% APP FUN
case H2. case H5. case H6. case H9. inst H10 with n1 = V1. cut H11. search. 

% APP_TY 1
case H2. case H5. apply IH to H3 H6. search.
% APP_TY LAM_TY
case H2 (keep). case H4. case H5. case H8. inst H9 with n1 = A1. cut H10. search.
% APP_COER 1
case H2. case H5. apply IH to H3 H6. search.
% APP_COER LAM_COER
case H2 (keep). case H4. case H5. case H8. inst H9 with n1 = Y. cut H10 with H6. search.

% LET_1
case H2. case H5. apply IH to H3 H6. search.
% LET
case H2. case H5. inst H7 with n1 = V1. cut H8. search.
% RET 1
case H2. case H5. apply IH to H3 H6. search.
% OP_1
case H2. case H5. apply IH to H3 H7. search.
% DO_1
case H2. case H5. apply IH to H3 H6. search.
% DO_RET
case H2. case H5. case H6. case H8. case H9. inst H7 with n1 = V1. cut H12 with H11. search.
% DO_OP
case H2. case H5. case H6. case H8. case H9. search.
% WITH_1
case H2. case H5. apply IH to H3 H7. search.
% WITH_2
case H2. case H6. apply IH to H4 H7. search.
% WITH RET
case H2. case H6. case H8. case H10. apply of/val_case to H11 H4. case H7. case H14. inst H12 with n1 = V1. cut H16 with H15. search.
% WITH OP
case H2 (keep). case H6 (keep). case H8 (keep). case H10 (keep). case H7 (keep). case H13. apply of/ml/op_case to H11 H4 H14 H17.
inst H18 with n1 = V1, n2 = (ml/fun B (y\ml/with (C y) (ml/hand H))).
cut H19 with H15.
assert {ml/wf_ty B}. skip.
assert {ml/wf_ty (ml/fun_ty B (ml/comp_ty B2))}.
assert (nabla y,{ml/of_term Sig y B |- ml/of_term Sig (ml/with (C y) (ml/hand H)) (ml/comp_ty B2)}).
assert {ml/of_term Sig (ml/fun B (y\ml/with (C y) (ml/hand H))) (ml/fun_ty B (ml/comp_ty B2))}. 
cut H20 with H24. search.

% CAST 1
case H2 (keep). case H5. apply IH to H3 H6. search.
% CAST UNIT_REFL
case H2. case H5. case H7. case H9. search.
% CAST RET COMP_TY_COER
case H2. case H5. case H6. case H9. case H10. case H7. case H14. case H4. case H8.  search.
% CAST OP COMP_TY_COER
case H2. case H5. case H7. case H9. case H6. case H12.
assert {ml/of_term Sig n1 A1 |- ml/of_term Sig (ml/cast (M n1) (ml/comp_ty_coer Y)) (ml/comp_ty A3)}.
search.
% CAST RETURN
case H2. case H5. case H7. case H9. case H4. search.
% CAST UNSAFE
case H2. case H5. case H6. case H9.  case H7. case H12. search.
% APP CAST FUN_COER
case H2. case H5. case H6. case H9. case H11. case H13. case H14. case H15. case H16. case H18.
assert {ml/of_term Sig (ml/cast V2 Y1) A4}. search.
% APP CAST HAND_COER
case H2. case H6. case H8. case H10. case H12. case H14. case H9. case H13. case H19. 
assert {ml/of_term Sig (ml/cast V1 Y1) (ml/comp_ty B4)}.
assert {ml/of_term Sig (ml/with (ml/cast V1 Y1) V2) (ml/comp_ty B1')}.
search.
% APP CAST HAND2FUN_COER
case H2. case H6. case H7. case H10. case H12. case H14. case H9. case H11. case H19.
assert {ml/of_term Sig (ml/ret (ml/cast V2 Y1)) (ml/comp_ty B1)}.
assert {ml/of_term Sig (ml/with (ml/ret (ml/cast V2 Y1)) V1) (ml/comp_ty B1')}.
search. 
% APP_TY CAST LAM_TY_COER
case H2. case H5. case H6. case H9. case H11. case H13. inst H14 with n1 = A1. case H10. case H16. inst H18 with n1 = A1. cut H19.
assert {ml/of_term Sig (ml/app_ty V1 A1) (A4 A1)}. 
search.
% APP_COER CAST LAM_COER
case H2. case H5. case H6. case H9. case H11. case H13. case H10. case H15.
assert {ml/of_term Sig (ml/app_coer V1 Y2) A2}.
search.
% QED

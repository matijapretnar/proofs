Set subgoals off.

Specification "exp2ml".

Close ml/ty, ml/term, ml/coer_ty, ml/hand, ml/coer, op.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Contexts
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Define e2m/ctx : exp/sig -> ml/sig -> olist -> olist -> prop by
  e2m/ctx Sig_t Sig_m nil nil
    := {e2m/sig Sig_t Sig_m};
  nabla x x', e2m/ctx Sig_e Sig_m
    (e2m/val Sig_t x A x' :: Ctx_t2m)
    (ml/of_term Sig_m x' A' :: Ctx_m)
    := e2m/ctx Sig_t Sig_m Ctx_t2m Ctx_m /\ {Ctx_t2m |- e2m/val_ty A A'}.

%   nabla t, e2m/ctx Sig_t Sig_e
%     (exp/skel_val_ty t Te :: Ctx_t)
%     (exp/skel_val_ty t Te :: Ctx_t2e)
%     Ctx_e
%     := e2m/ctx Sig_t Sig_e Ctx_t Ctx_t2e Ctx_e;
%   nabla w, e2m/ctx Sig_t Sig_e
%     (exp/of_coer w (exp/val_ty_coer_ty At1 At2) :: Ctx_t)
%     Ctx_t2e
%     Ctx_e
%     := e2m/ctx Sig_t Sig_e Ctx_t Ctx_t2e Ctx_e /\ exists S, {Ctx_t |- exp/skel_val_ty At1 S} /\ {Ctx_t |- exp/skel_val_ty At2 S};
%   nabla w, e2m/ctx Sig_t Sig_e
%     (exp/of_coer w (exp/comp_ty_coer_ty At1 At2) :: Ctx_t)
%     Ctx_t2e
%     Ctx_e
%     := e2m/ctx Sig_t Sig_e Ctx_t Ctx_t2e Ctx_e /\ exists S, {Ctx_t |- exp/skel_comp_ty At1 S} /\ {Ctx_t |- exp/skel_comp_ty At2 S};
%   nabla w, e2m/ctx Sig_t Sig_e
%     (exp/of_coer w (exp/dirt_coer_ty D1 D2) :: Ctx_t)
%     Ctx_t2e
%     Ctx_e
%     := e2m/ctx Sig_t Sig_e Ctx_t Ctx_t2e Ctx_e.

Theorem from_impure :
  (
    forall A D Y D' A1 A2,
      {from_impure/val A D Y} ->
      {e2m/full_dirt D'} ->
      {e2m/val_ty (A D') A1} ->
      {e2m/val_ty (A D) A2} ->
      {ml/of_coer Y (ml/ty_coer_ty A1 A2)}
  ) /\ (
    forall C D Y D' A1 A2,
      {from_impure/comp C D Y} ->
      {e2m/full_dirt D'} ->
      {e2m/comp_ty (C D') A1} ->
      {e2m/comp_ty (C D) A2} ->
      {ml/of_coer Y (ml/ty_coer_ty A1 A2)}
  ) /\ (
    forall A D Y D' A1 A2,
      {to_impure/val A D Y} ->
      {e2m/full_dirt D'} ->
      {e2m/val_ty (A D') A1} ->
      {e2m/val_ty (A D) A2} ->
      {ml/of_coer Y (ml/ty_coer_ty A2 A1)}
  ) /\
  (
    forall C D Y D' A1 A2,
      {to_impure/comp C D Y} ->
      {e2m/full_dirt D'} ->
      {e2m/comp_ty (C D') A1} ->
      {e2m/comp_ty (C D) A2} ->
      {ml/of_coer Y (ml/ty_coer_ty A2 A1)}
  ).
induction on 1 1 1 1. split.
% from_impure/val
intros. case H1.
  % unit_ty
  case H3. case H4. search.
  % fun_ty
  case H3. case H4.
  apply IH2 to H5 H2 H7 H9.
  apply IH1 to H6 H2 H8 H10.
  search.
% from_impure/comp
intros. case H1.
  % empty
  case H3. % see what the full dirt D' is
    % trivial case
    case H2.
    % interesting case
    case H4.
      % interesting case
      apply IH to H5 H2 H7 H8. search.
      case H8.
  % non-empty case
  case H3.
    case H2.
    case H4.
      case H6.
      apply IH to H5 H2 H8 H10. search.
% to_impure/val
skip.
% to_impure/comp
skip.
  


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Strenghtening Lemma
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Theorem ml/ty_strengthen :
  (
    forall Sig_t Sig_ml Ctx_t2m Ctx_m A T, 
         e2m/ctx Sig_t Sig_ml Ctx_t2m Ctx_m
      -> {Ctx_t2m, e2m/val Sig_t n1 A n2 |- e2m/val_ty A T} 
      -> {Ctx_t2m |- e2m/val_ty A T}
  ) /\ (
    forall Sig_t Sig_ml Ctx_t2m Ctx_m A C T, 
         e2m/ctx Sig_t Sig_ml Ctx_t2m Ctx_m 
      -> {Ctx_t2m, e2m/val Sig_t n1 A n2 |- e2m/comp_ty C T} 
      -> {Ctx_t2m |- e2m/comp_ty C T}
  ).
skip.
% induction on 2 2. split.

Split ml/ty_strengthen as ml/strengthen_val_ty, ml/strengthen_comp_ty.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Main Theorem
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Theorem e2m/of_val :
 (forall Sig_t Sig_ml V_t V_ml A_t Ctx_t2m Ctx_m,
        e2m/ctx Sig_t Sig_ml Ctx_t2m Ctx_m
     -> {Ctx_t2m |- e2m/val Sig_t V_t A_t V_ml}
     -> exists T, {Ctx_t2m |- e2m/val_ty A_t (T:ml/ty)} /\ {Ctx_m |- ml/of_term Sig_ml V_ml T})
 /\
 (forall Sig_t Sig_ml C_t C_ml D_t Ctx_t2m Ctx_m,
        e2m/ctx Sig_t Sig_ml Ctx_t2m Ctx_m
     -> {Ctx_t2m |- e2m/comp Sig_t C_t D_t C_ml}
     -> exists T, {Ctx_t2m |- e2m/comp_ty D_t (T:ml/ty)} /\ {Ctx_m |- ml/of_term Sig_ml C_ml T})
 .
Set search_depth 7.
induction on 2 2. split.
% VALUES
intros.
case H2.
% UNIT
exists ml/unit_ty.
search.
% FUN
Set witnesses on.
apply IH1 to _ H4.
exists (ml/fun_ty Aml T).
split.
apply ml/strengthen_comp_ty to _ H5.
search.
search.
% SKELETON LAMBDA
apply IH to _ H3.
exists T.
split.
search.
search.
% SKELETON APPLY
apply IH to _ H3.
exists T.
split..
case H4.
inst H6 with n1 = S.
search.
%

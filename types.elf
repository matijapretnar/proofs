%%% Types of Core Eff

% Types are split into:
% - pure expression types "ty", and
% - impure computation (dirty) types "dirty", which are just pairs "A ! D",
%   where "A" is an expression type and "D" is dirt representing potential operations.

ty : type.
dirty : type.
%name ty A.
%name dirty B.
% Usually, we write underlined "C" and "D" for computation types.
% However, all variables in Twelf need to be capital letters,
% so "C" is already taken by computations, and "D" is convenient for dirts,
% thus we label dirty types by "B".

bool  : ty.                   % the type of booleans
nat   : ty.                   % the type of natural numbers
unit  : ty.                   % the unit type
empty : ty.                   % the empty type
-->   : ty -> dirty -> ty.    % the function type
inst  : region Eff -> ty.     % the type of instances of a given effect
==>   : dirty -> dirty -> ty. % the type of handlers
%infix right 50 -->.
%infix right 55 ==>.

! : ty -> dirt -> dirty.
%infix none 60 !.



% Types and dirty types are equipped with structural subtyping relations

<t : ty -> ty -> type.
<dt : dirty -> dirty -> type.
%infix none 30 <t.
%infix none 30 <dt.

<t/bool  : bool <t bool.
<t/nat   : nat <t nat.
<t/unit  : unit <t unit.
<t/empty : empty <t empty.
<t/-->   : A --> B <t A' --> B'
            <- B <dt B'
            <- A' <t A.
<t/inst  : inst R <t inst R'
            <- R <r R'.
<t/==>   : B1 ==> B2 <t B1' ==> B2'
            <- B2 <dt B2'
            <- B1' <dt B1.

<dt/!    : A ! D <dt A' ! D'
            <- D <d D'
            <- A <t A'.

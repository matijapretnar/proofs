%%%%% Preservation theorem %%%%%

matijas-lemma : scof Sig (op O E K) S D -> sig Sig O A1 A2 -> type.
%mode matijas-lemma +OpCall -O.

- : matijas-lemma (scof/forall S) (O bool)
    <- {t} matijas-lemma (S t) (O t).

- : matijas-lemma (scof/plain (cof/op O _ _ _)) O.

%worlds (topen) (matijas-lemma _ _).
%total {OpCall} (matijas-lemma OpCall _).

ohads-lemma : scof Sig (op O E K) S D -> sig Sig O A1 A2 -> eof Sig E A1 -> ({x} var x A2 -> scof Sig (K x) S D) -> in-dirt O D -> type.
%mode ohads-lemma +OpCall +O -E -K -OinD.

- : ohads-lemma (scof/forall S) O (E bool) ([x] [dx] scof/forall ([t] K t x dx)) OinD
     <- {t} ohads-lemma (S t) O (E t) (K t) OinD.

- : ohads-lemma (scof/plain (cof/op O E K OinD)) _ E ([x] [dx] scof/plain (K x dx)) OinD.

%worlds (topen) (ohads-lemma _ _ _ _ _).
%total {S} (ohads-lemma S _ _ _ _).


% To prove preservation, we need to simultaneously prove two other lemmas that
% use preservation of the type computations in the eretuation context of either
% let-binding or handling construct.

preservation      : cof Sig C A -> step Sig C C' -> cof Sig C' A -> type.
preservation-scof  : scof Sig C S D -> step Sig C C' -> scof Sig C' S D -> type.
%mode preservation +C +S -C'.
%mode preservation-scof +C +S -C'.

- : preservation (cof/cond _ C1 _) step/cond-tru C1.

- : preservation (cof/cond _ _ C2) step/cond-fls C2.

- : preservation (cof/app (eof/fun C) E) step/app C'
     <- subst C E C'.

- : preservation (cof/let C1 C2) step/let-ret C2'
     <- ret-ceof C1 E
     <- psubst-cof E C2 C2'.

- : preservation (cof/let C1 C2) step/let-op (cof/op O Ep ([_] [y] (cof/let (K _ y) C2)) OinD)
     <- matijas-lemma C1 O
     <- ohads-lemma C1 O Ep K OinD.

- : preservation (cof/let C1 C2) (step/let-step S) (cof/let C1' C2)
     <- preservation-scof C1 S C1'.

- : preservation (cof/with (eof/hnd Cv _ _) (cof/ret E)) step/with-ret C'
     <- subst Cv E C'.

- : preservation (cof/with (eof/hnd Cv OCs Cov) (cof/op _ E K OinD)) (step/with-op OC O) C'
     <- preservation-with-op OinD O E
         (eof/fun [x] [e] cof/with (eof/hnd Cv OCs Cov) (K x e))
         OC OCs Cov C'.

- : preservation (cof/with E C) (step/with-step S) (cof/with E C')
     <- preservation C S C'.


- : preservation-scof (scof/plain C) S (scof/plain C')
     <- preservation C S C'.

- : preservation-scof (scof/forall C) S (scof/forall C')
     <- {t} preservation-scof (C t) S (C' t).


%worlds (topen) (preservation _ _ _) (preservation-scof _ _ _).
%total {(S S') (C C')} (preservation C S _) (preservation-scof C' S' _).

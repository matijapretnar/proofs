<r/rest : {E} {I : instance E} {R : region E} {R' : region E}
     R <r R' -> R <r (region/cons I R') -> type. 
%mode <r/rest +E +I +R +R' +RR' -RIR'.

- : <r/rest _ _ _ _ <r/empty <r/empty.
- : <r/rest _ _ _ _ (<r/cons JR' RR') (<r/cons (in-region/there JR') RIR')
     <- <r/rest _ _ _ _ RR' RIR'.

%worlds (vars) (<r/rest _ _ _ _ _ _).
%total {RR'} (<r/rest _ _ _ _ RR' _).

<r/refl : {R} R <r R -> type.
%mode <r/refl +R -RR.

- : <r/refl region/empty <r/empty.
- : <r/refl (region/cons I R) (<r/cons in-region/here RIR)
     <- <r/refl R RR
     <- <r/rest _ _ R R RR RIR.

%worlds (vars) (<r/refl _ _).
%total {R} (<r/refl R _).

<d/rest : {E} {D} {I : instance E} {O} {D'} D <d D' -> D <d (dirt/cons I O D') -> type. 
%mode <d/rest +E +D +I +O +D' +DD' -DIOD'.

- : <d/rest _ _ _ _ _ <d/empty <d/empty.
- : <d/rest _ _ _ _ _ (<d/cons JOD' DD') (<d/cons (in-dirt-instance/there JOD') DIOD')
     <- <d/rest _ _ _ _ _ DD' DIOD'.


%worlds (vars) (<d/rest _ _ _ _ _ _ _).
%total {DD'} (<d/rest _ _ _ _ _ DD' _).

<d/refl : {D} D <d D -> type.
%mode <d/refl +D -DD.

- : <d/refl dirt/empty <d/empty.
- : <d/refl (dirt/cons I O D) (<d/cons in-dirt-instance/here DIOD)
     <- <d/refl D DD
     <- <d/rest _ D I O D DD DIOD.

%worlds (vars) (<d/refl _ _).
%total {D} (<d/refl D _).

<t/refl : {A} A <t A -> type.
%mode <t/refl +A -AA.
<dt/refl : {B} B <dt B -> type.
%mode <dt/refl +B -BB.

- : <t/refl nat <t/nat.
- : <t/refl bool <t/bool.
- : <t/refl unit <t/unit.
- : <t/refl empty <t/empty.
- : <t/refl (inst R) (<t/inst RR)
     <- <r/refl R RR.
- : <t/refl (A --> B) (<t/--> AA BB)
     <- <t/refl A AA
     <- <dt/refl B BB.
- : <t/refl (A ==> B) (<t/==> AA BB)
     <- <dt/refl A AA
     <- <dt/refl B BB.
- : <dt/refl (A ! D) (<dt/! AA DD)
     <- <t/refl A AA
     <- <d/refl D DD.

%worlds (vars) (<t/refl _ _) (<dt/refl _ _).
%total {(A B)} (<t/refl A _) (<dt/refl B _).

<d/in-dirt-instance : in-dirt-instance I O D -> D <d D' -> in-dirt-instance I O D' -> type.
%mode <d/in-dirt-instance +IiD +DD' -IiD'.

- : <d/in-dirt-instance in-dirt-instance/here (<d/cons IiD' _) IiD'.
- : <d/in-dirt-instance (in-dirt-instance/there IiD) (<d/cons _ DD') IiD'
     <- <d/in-dirt-instance IiD DD' IiD'.

%worlds (vars) (<d/in-dirt-instance _ _ _).
%total {IiD} (<d/in-dirt-instance IiD _ _).

<r/in-region : in-region I D -> D <r D' -> in-region I D' -> type.
%mode <r/in-region +IiD +DD' -IiD'.

- : <r/in-region in-region/here (<r/cons IiD' _) IiD'.
- : <r/in-region (in-region/there IiD) (<r/cons _ DD') IiD'
     <- <r/in-region IiD DD' IiD'.

%worlds (vars) (<r/in-region _ _ _).
%total {IiD} (<r/in-region IiD _ _).

<d/in-dirt : in-dirt R O D -> D <d D' -> in-dirt R O D' -> type.
%mode <d/in-dirt +RiD +DD' -RiD'.

- : <d/in-dirt in-dirt/empty _ in-dirt/empty.
- : <d/in-dirt (in-dirt/cons IiD RiD) DD' (in-dirt/cons IiD' RiD')
     <- <d/in-dirt-instance IiD DD' IiD'
     <- <d/in-dirt RiD DD' RiD'.

%worlds (vars) (<d/in-dirt _ _ _).
%total {IiR} (<d/in-dirt IiR _ _).

<d/trans : D <d D' -> D' <d D'' -> D <d D'' -> type.
%mode <d/trans +DD' +D'D'' -DD''.

- : <d/trans <d/empty _ <d/empty.
- : <d/trans (<d/cons IOD' DD') D'D'' (<d/cons IOD'' DD'')
     <- <d/trans DD' D'D'' DD''
     <- <d/in-dirt-instance IOD' D'D'' IOD''.

%worlds (vars) (<d/trans _ _ _).
%total {DD'} (<d/trans DD' _ _).

<r/trans : D <r D' -> D' <r D'' -> D <r D'' -> type.
%mode <r/trans +DD' +D'D'' -DD''.

- : <r/trans <r/empty _ <r/empty.
- : <r/trans (<r/cons IOD' DD') D'D'' (<r/cons IOD'' DD'')
     <- <r/trans DD' D'D'' DD''
     <- <r/in-region IOD' D'D'' IOD''.

%worlds (vars) (<r/trans _ _ _).
%total {DD'} (<r/trans DD' _ _).

<t/trans : D <t D' -> D' <t D'' -> D <t D'' -> type.
<dt/trans : D <dt D' -> D' <dt D'' -> D <dt D'' -> type.
<t/snart : D' <t D -> D'' <t D' -> D'' <t D -> type.
<dt/snart : D' <dt D -> D'' <dt D' -> D'' <dt D -> type.
%mode <t/trans +DD' +D'D'' -DD''.
%mode <t/snart +D'D'' +DD' -DD''.
%mode <dt/trans +DD' +D'D'' -DD''.
%mode <dt/snart +D'D'' +DD' -DD''.

- : <t/trans <t/nat _ <t/nat.
- : <t/trans <t/bool _ <t/bool.
- : <t/trans <t/unit _ <t/unit.
- : <t/trans <t/empty _ <t/empty.
- : <t/trans (<t/--> A'A BB') (<t/--> A''A' B'B'')  (<t/--> A''A BB'')
     <- <dt/trans BB' B'B'' BB''
     <- <t/snart A'A A''A' A''A.
- : <t/trans (<t/inst RR') (<t/inst R'R'') (<t/inst RR'')
     <- <r/trans RR' R'R'' RR''.
- : <t/trans (<t/==> A'A BB') (<t/==> A''A' B'B'')  (<t/==> A''A BB'')
     <- <dt/trans BB' B'B'' BB''
     <- <dt/snart A'A A''A' A''A.

- : <t/snart <t/nat _ <t/nat.
- : <t/snart <t/bool _ <t/bool.
- : <t/snart <t/unit _ <t/unit.
- : <t/snart <t/empty _ <t/empty.
- : <t/snart (<t/--> A'A BB') (<t/--> A''A' B'B'')  (<t/--> A''A BB'')
     <- <dt/snart BB' B'B'' BB''
     <- <t/trans A'A A''A' A''A.
- : <t/snart (<t/inst R'R) (<t/inst R''R') (<t/inst R''R)
     <- <r/trans R''R' R'R R''R.
- : <t/snart (<t/==> A'A BB') (<t/==> A''A' B'B'')  (<t/==> A''A BB'')
     <- <dt/snart BB' B'B'' BB''
     <- <dt/trans A'A A''A' A''A.

- : <dt/trans (<dt/! AA' DD') (<dt/! A'A'' D'D'') (<dt/! AA'' DD'')
     <- <d/trans DD' D'D'' DD''
     <- <t/trans AA' A'A'' AA''.

- : <dt/snart (<dt/! AA' D'D) (<dt/! A'A'' D''D') (<dt/! AA'' D''D)
     <- <d/trans D''D' D'D D''D
     <- <t/snart AA' A'A'' AA''.

%worlds (vars) (<t/trans _ _ _) (<t/snart _ _ _) (<dt/trans _ _ _) (<dt/snart _ _ _).
%total {(DD' EE' FF' GG')} (<t/trans DD' _ _) (<t/snart EE' _ _) (<dt/trans FF' _ _) (<dt/snart GG' _ _).

instance-in-region-in-dirt : in-region I R -> in-dirt R O D -> in-dirt-instance I O D -> type.
%mode instance-in-region-in-dirt +IinR +ROinD -IOinD.

- : instance-in-region-in-dirt in-region/here (in-dirt/cons IinD _) IinD.
- : instance-in-region-in-dirt (in-region/there IinR) (in-dirt/cons _ RinD) IinD
     <- instance-in-region-in-dirt IinR RinD IinD.

%worlds (vars) (instance-in-region-in-dirt _ _ _).
%total {IinR} (instance-in-region-in-dirt IinR _ _).


<r/in-dirt : R <r R' -> in-dirt R' O D -> in-dirt R O D -> type.
%mode <r/in-dirt +RR' +R'OinD -ROinD.

- : <r/in-dirt <r/empty _ in-dirt/empty.
- : <r/in-dirt (<r/cons IinR' RR') R'inD (in-dirt/cons IinD RinD)
     <- instance-in-region-in-dirt IinR' R'inD IinD
     <- <r/in-dirt RR' R'inD RinD.

%worlds (vars) (<r/in-dirt _ _ _).
%total {RR'} (<r/in-dirt RR' _ _).



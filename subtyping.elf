<r/rest : R <r R' -> {I'} R <r (region/cons I' R') -> type. 
%mode <r/rest +R<R' +I' -R<I'R'.

- : <r/rest <r/empty _ <r/empty.

- : <r/rest (<r/cons IinR' R<R') _ (<r/cons (in-region/there IinR') R<I'R')
     <- <r/rest R<R' _ R<I'R'.

%worlds (vars) (<r/rest _ _ _).
%total {R<R'} (<r/rest R<R' _ _).


<d/rest : D <d D' -> {I'} {O'} D <d (dirt/cons I' O' D') -> type. 
%mode <d/rest +D<D' +I' +O' -D<I'O'D'.

- : <d/rest <d/empty _ _ <d/empty.

- : <d/rest (<d/cons IOinD' D<D') _ _ (<d/cons (in-dirt-instance/there IOinD') D<I'O'D')
     <- <d/rest D<D' _ _ D<I'O'D'.

%worlds (vars) (<d/rest _ _ _ _).
%total {D<D'} (<d/rest D<D' _ _ _).


<r/refl : {R} R <r R -> type.
%mode <r/refl +R -R<R.

- : <r/refl region/empty <r/empty.

- : <r/refl (region/cons I R) (<r/cons in-region/here R<IR)
     <- <r/refl R R<R
     <- <r/rest R<R _ R<IR.

%worlds (vars) (<r/refl _ _).
%total {R} (<r/refl R _).


<d/refl : {D} D <d D -> type.
%mode <d/refl +D -D<D.

- : <d/refl dirt/empty <d/empty.

- : <d/refl (dirt/cons I O D) (<d/cons in-dirt-instance/here D<IOD)
     <- <d/refl D D<D
     <- <d/rest D<D I O D<IOD.

%worlds (vars) (<d/refl _ _).
%total {D} (<d/refl D _).


<t/refl : {A} A <t A -> type.
<dt/refl : {B} B <dt B -> type.
%mode <t/refl +A -A<A.
%mode <dt/refl +B -B<B.

- : <t/refl nat <t/nat.

- : <t/refl bool <t/bool.

- : <t/refl unit <t/unit.

- : <t/refl empty <t/empty.

- : <t/refl (inst R) (<t/inst R<R)
     <- <r/refl R R<R.

- : <t/refl (A --> B) (<t/--> A<A B<B)
     <- <t/refl A A<A
     <- <dt/refl B B<B.

- : <t/refl (B1 ==> B2) (<t/==> B1<B1 B2<B2)
     <- <dt/refl B1 B1<B1
     <- <dt/refl B2 B2<B2.

- : <dt/refl (A ! D) (<dt/! A<A D<D)
     <- <t/refl A A<A
     <- <d/refl D D<D.

%worlds (vars) (<t/refl _ _) (<dt/refl _ _).
%total {(A B)} (<t/refl A _) (<dt/refl B _).


in-region/<r : in-region I R -> R <r R' -> in-region I R' -> type.
%mode in-region/<r +IinR +R<R' -IinR'.

- : in-region/<r in-region/here (<r/cons IinR' _) IinR'.

- : in-region/<r (in-region/there IinR) (<r/cons _ R<R') IinR'
     <- in-region/<r IinR R<R' IinR'.

%worlds (vars) (in-region/<r _ _ _).
%total {IinR} (in-region/<r IinR _ _).


in-dirt-instance/<d : in-dirt-instance I O D -> D <d D' -> in-dirt-instance I O D' -> type.
%mode in-dirt-instance/<d +IOinD +D<D' -IOinD'.

- : in-dirt-instance/<d in-dirt-instance/here (<d/cons IOinD' _) IOinD'.

- : in-dirt-instance/<d (in-dirt-instance/there IOinD) (<d/cons _ D<D') IOinD'
     <- in-dirt-instance/<d IOinD D<D' IOinD'.

%worlds (vars) (in-dirt-instance/<d _ _ _).
%total {IOinD} (in-dirt-instance/<d IOinD _ _).


in-dirt/<d : in-dirt R O D -> D <d D' -> in-dirt R O D' -> type.
%mode in-dirt/<d +ROinD +D<D' -ROinD'.

- : in-dirt/<d in-dirt/empty _ in-dirt/empty.

- : in-dirt/<d (in-dirt/cons IOinD ROinD) D<D' (in-dirt/cons IOinD' ROinD')
     <- in-dirt-instance/<d IOinD D<D' IOinD'
     <- in-dirt/<d ROinD D<D' ROinD'.

%worlds (vars) (in-dirt/<d _ _ _).
%total {ROinD} (in-dirt/<d ROinD _ _).


instance-in-region-in-dirt : in-region I R -> in-dirt R O D -> in-dirt-instance I O D -> type.
%mode instance-in-region-in-dirt +IinR +ROinD -IOinD.

- : instance-in-region-in-dirt in-region/here (in-dirt/cons IOinD _) IOinD.
- : instance-in-region-in-dirt (in-region/there IinR) (in-dirt/cons _ ROinD) IOinD
     <- instance-in-region-in-dirt IinR ROinD IOinD.

%worlds (vars) (instance-in-region-in-dirt _ _ _).
%total {IinR} (instance-in-region-in-dirt IinR _ _).


<r/in-dirt : R <r R' -> in-dirt R' O D -> in-dirt R O D -> type.
%mode <r/in-dirt +R<R' +R'OinD -ROinD.

- : <r/in-dirt <r/empty _ in-dirt/empty.
- : <r/in-dirt (<r/cons IinR' R<R') R'OinD (in-dirt/cons IOinD ROinD)
     <- instance-in-region-in-dirt IinR' R'OinD IOinD
     <- <r/in-dirt R<R' R'OinD ROinD.

%worlds (vars) (<r/in-dirt _ _ _).
%total {R<R'} (<r/in-dirt R<R' _ _).


<r/trans : R <r R' -> R' <r R'' -> R <r R'' -> type.
%mode <r/trans +R<R' +R'>R'' -R<R''.

- : <r/trans <r/empty _ <r/empty.
- : <r/trans (<r/cons IinR' R<R') R'<R'' (<r/cons IinR'' R<R'')
     <- <r/trans R<R' R'<R'' R<R''
     <- in-region/<r IinR' R'<R'' IinR''.

%worlds (vars) (<r/trans _ _ _).
%total {R<R'} (<r/trans R<R' _ _).


<d/trans : D <d D' -> D' <d D'' -> D <d D'' -> type.
%mode <d/trans +D<D' +D'<D'' -D<D''.

- : <d/trans <d/empty _ <d/empty.

- : <d/trans (<d/cons IOinD' D<D') D'<D'' (<d/cons IOinD'' D<D'')
     <- <d/trans D<D' D'<D'' D<D''
     <- in-dirt-instance/<d IOinD' D'<D'' IOinD''.

%worlds (vars) (<d/trans _ _ _).
%total {D<D'} (<d/trans D<D' _ _).


<t/trans : A <t A' -> A' <t A'' -> A <t A'' -> type.
<dt/trans : B <dt B' -> B' <dt B'' -> B <dt B'' -> type.
<t/snart : A' <t A -> A'' <t A' -> A'' <t A -> type.
<dt/snart : B' <dt B -> B'' <dt B' -> B'' <dt B -> type.
%mode <t/trans +A<A' +A'<A'' -A<A''.
%mode <dt/trans +B<B' +B'<B'' -B<B''.
%mode <t/snart +A'<A +A''<A' -A''<A.
%mode <dt/snart +B'<B +B''<B' -B''<B.

- : <t/trans <t/nat _ <t/nat.

- : <t/trans <t/bool _ <t/bool.

- : <t/trans <t/unit _ <t/unit.

- : <t/trans <t/empty _ <t/empty.

- : <t/trans (<t/--> A'<A B<B') (<t/--> A''<A' B'<B'')  (<t/--> A''<A B<B'')
     <- <t/snart A'<A A''<A' A''<A
     <- <dt/trans B<B' B'<B'' B<B''.

- : <t/trans (<t/inst R<R') (<t/inst R'<R'') (<t/inst R<R'')
     <- <r/trans R<R' R'<R'' R<R''.

- : <t/trans (<t/==> B1'<B1 B2<B2') (<t/==> B1''<B1' B2'<B2'')  (<t/==> B1''<B1 B2<B2'')
     <- <dt/snart B1'<B1 B1''<B1' B1''<B1
     <- <dt/trans B2<B2' B2'<B2'' B2<B2''.


- : <dt/trans (<dt/! A<A' D<D') (<dt/! A'<A'' D'<D'') (<dt/! A<A'' D<D'')
     <- <d/trans D<D' D'<D'' D<D''
     <- <t/trans A<A' A'<A'' A<A''.


- : <t/snart <t/nat _ <t/nat.

- : <t/snart <t/bool _ <t/bool.

- : <t/snart <t/unit _ <t/unit.

- : <t/snart <t/empty _ <t/empty.

- : <t/snart (<t/--> A<A' B'<B) (<t/--> A'<A'' B''<B')  (<t/--> A<A'' B''<B)
     <- <t/trans A<A' A'<A'' A<A''
     <- <dt/snart B'<B B''<B' B''<B.

- : <t/snart (<t/inst R'<R) (<t/inst R''<R') (<t/inst R''<R)
     <- <r/trans R''<R' R'<R R''<R.

- : <t/snart (<t/==> B1<B1' B2'<B2) (<t/==> B1'<B1'' B2''<B2')  (<t/==> B1<B1'' B2''<B2)
     <- <dt/trans B1<B1' B1'<B1'' B1<B1''
     <- <dt/snart B2'<B2 B2''<B2' B2''<B2.


- : <dt/snart (<dt/! A'<A D'<D) (<dt/! A''<A' D''<D') (<dt/! A''<A D''<D)
     <- <d/trans D''<D' D'<D D''<D
     <- <t/snart A'<A A''<A' A''<A.

%worlds (vars) (<t/trans _ _ _) (<dt/trans _ _ _) (<t/snart _ _ _) (<dt/snart _ _ _).
%total {(A<A' A'<A B<B' B'<B)} (<t/trans A<A' _ _) (<dt/trans B<B' _ _) (<t/snart A'<A _ _) (<dt/snart B'<B _ _).


instance-expr-in-region : eof _ (ins I) (inst R) -> in-region I R -> type.
%mode instance-expr-in-region +E -IinR.

- : instance-expr-in-region (eof/ins IinR) IinR.

- : instance-expr-in-region (eof/sub E (<t/inst R<R')) IinR'
     <- instance-expr-in-region E IinR
     <- in-region/<r IinR R<R' IinR'.

%worlds (vars) (instance-expr-in-region _ _).
%total {E} (instance-expr-in-region E _).


covers-rest : covers (dirt/cons _ _ D) D1 D2 -> covers D D1 D2 -> type.
%mode covers-rest +Cov -Cov'.

- : covers-rest (covers/cons-here _ Cov') Cov'.
- : covers-rest (covers/cons-there _ Cov') Cov'.

%worlds (vars) (covers-rest _ _).
%total {} (covers-rest _ _).

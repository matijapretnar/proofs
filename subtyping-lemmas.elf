%%% Reflexivity of subtyping %%%

<dt/refl : {B} B <dt B -> type.
%mode <dt/refl +B -B<B.

- : <dt/refl (A ! D) (<dt/! <t/refl D<D)
     <- <d/refl D D<D.

%worlds (topen) (<dt/refl _ _).
%total {} (<dt/refl _ _).



%%% Transitivity of subtyping %%%

% Because of contravariance, the termination checker complains, and the
% easiest way to please it is by introducing two additional type families
% that also state transitivity, but with a different order of premises.

<t/trans : A <t A' -> A' <t A'' -> A <t A'' -> type.
<dt/trans : B <dt B' -> B' <dt B'' -> B <dt B'' -> type.
<t/snart : A' <t A -> A'' <t A' -> A'' <t A -> type.
<dt/snart : B' <dt B -> B'' <dt B' -> B'' <dt B -> type.
%mode <t/trans +A<A' +A'<A'' -A<A''.
%mode <dt/trans +B<B' +B'<B'' -B<B''.
%mode <t/snart +A'<A +A''<A' -A''<A.
%mode <dt/snart +B'<B +B''<B' -B''<B.

- : <t/trans <t/refl A<A' A<A'.

- : <t/trans A<A' <t/refl A<A'.

- : <t/trans (<t/--> A'<A B<B') (<t/--> A''<A' B'<B'')  (<t/--> A''<A B<B'')
     <- <t/snart A'<A A''<A' A''<A
     <- <dt/trans B<B' B'<B'' B<B''.

- : <t/trans (<t/inst R<R') (<t/inst R'<R'') (<t/inst R<R'')
     <- <r/trans R<R' R'<R'' R<R''.

- : <t/trans (<t/==> B1'<B1 B2<B2') (<t/==> B1''<B1' B2'<B2'')  (<t/==> B1''<B1 B2<B2'')
     <- <dt/snart B1'<B1 B1''<B1' B1''<B1
     <- <dt/trans B2<B2' B2'<B2'' B2<B2''.


- : <dt/trans (<dt/! A<A' D<D') (<dt/! A'<A'' D'<D'') (<dt/! A<A'' D<D'')
     <- <d/trans D<D' D'<D'' D<D''
     <- <t/trans A<A' A'<A'' A<A''.


- : <t/snart <t/refl A<A' A<A'.

- : <t/snart A<A' <t/refl A<A'.

- : <t/snart (<t/--> A<A' B'<B) (<t/--> A'<A'' B''<B')  (<t/--> A<A'' B''<B)
     <- <t/trans A<A' A'<A'' A<A''
     <- <dt/snart B'<B B''<B' B''<B.

- : <t/snart (<t/inst R'<R) (<t/inst R''<R') (<t/inst R''<R)
     <- <r/trans R''<R' R'<R R''<R.

- : <t/snart (<t/==> B1<B1' B2'<B2) (<t/==> B1'<B1'' B2''<B2')  (<t/==> B1<B1'' B2''<B2)
     <- <dt/trans B1<B1' B1'<B1'' B1<B1''
     <- <dt/snart B2'<B2 B2''<B2' B2''<B2.


- : <dt/snart (<dt/! A'<A D'<D) (<dt/! A''<A' D''<D') (<dt/! A''<A D''<D)
     <- <d/trans D''<D' D'<D D''<D
     <- <t/snart A'<A A''<A' A''<A.

%worlds (topen) (<t/trans _ _ _) (<dt/trans _ _ _) (<t/snart _ _ _) (<dt/snart _ _ _).
%total {(A<A' A'<A B<B' B'<B)} (<t/trans A<A' _ _) (<dt/trans B<B' _ _) (<t/snart A'<A _ _) (<dt/snart B'<B _ _).

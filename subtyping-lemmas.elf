%%% Reflexivity of subtyping %%%

<t/refl : {A} A <t A -> type.
%mode <t/refl +A -A<A.

- : <t/refl _ <t/nat.

- : <t/refl _ <t/bool.

- : <t/refl _ <t/unit.

- : <t/refl _ <t/empty.

- : <t/refl _ <t/inst.

- : <t/refl (A --> B) (<t/--> A<A B<B)
     <- <t/refl A A<A
     <- <t/refl B B<B.

- : <t/refl (B1 ==> B2) (<t/==> B1<B1 B2<B2)
     <- <t/refl B1 B1<B1
     <- <t/refl B2 B2<B2.

%worlds (topen) (<t/refl _ _).
%trustme %total {A} (<t/refl A _).



%%% Transitivity of subtyping %%%

% Because of contravariance, the termination checker complains, and the
% easiest way to please it is by introducing two additional type families
% that also state transitivity, but with a different order of premises.

<t/trans : A <t A' -> A' <t A'' -> A <t A'' -> type.
<t/snart : A' <t A -> A'' <t A' -> A'' <t A -> type.
%mode <t/trans +A<A' +A'<A'' -A<A''.
%mode <t/snart +A'<A +A''<A' -A''<A.

- : <t/trans _ _ <t/nat.

- : <t/trans _ _ <t/bool.

- : <t/trans _ _ <t/unit.

- : <t/trans _ _ <t/empty.

- : <t/trans (<t/--> A'<A B<B') (<t/--> A''<A' B'<B'')  (<t/--> A''<A B<B'')
     <- <t/snart A'<A A''<A' A''<A
     <- <t/trans B<B' B'<B'' B<B''.

- : <t/trans _ _ <t/inst.

- : <t/trans (<t/==> B1'<B1 B2<B2') (<t/==> B1''<B1' B2'<B2'')  (<t/==> B1''<B1 B2<B2'')
     <- <t/snart B1'<B1 B1''<B1' B1''<B1
     <- <t/trans B2<B2' B2'<B2'' B2<B2''.


- : <t/snart _ _ <t/nat.

- : <t/snart _ _ <t/bool.

- : <t/snart _ _ <t/unit.

- : <t/snart _ _ <t/empty.

- : <t/snart (<t/--> A<A' B'<B) (<t/--> A'<A'' B''<B')  (<t/--> A<A'' B''<B)
     <- <t/trans A<A' A'<A'' A<A''
     <- <t/snart B'<B B''<B' B''<B.

- : <t/snart _ _ <t/inst.

- : <t/snart (<t/==> B1<B1' B2'<B2) (<t/==> B1'<B1'' B2''<B2')  (<t/==> B1<B1'' B2''<B2)
     <- <t/trans B1<B1' B1'<B1'' B1<B1''
     <- <t/snart B2'<B2 B2''<B2' B2''<B2.


%worlds (topen) (<t/trans _ _ _) (<t/snart _ _ _).
%trustme %total {(A<A' A'<A)} (<t/trans A<A' _ _) (<t/snart A'<A _ _).
